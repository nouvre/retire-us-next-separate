import React, { useEffect, useState } from "react";
import ArrowLeft from "@2fd/ant-design-icons/lib/ArrowLeft";
import ArrowRight from "@2fd/ant-design-icons/lib/ArrowRight";
import Step1IncomeModal from "./Step1IncomeModal";
import Stepper from "./Stepper";
import { Answer } from "@/store/questions/types";
import { Tooltip } from "antd";

interface ComponentProps {
    data: Answer;
    handleNext: (e: Answer) => void;
    handlePrev: (e: Answer) => void;
}

const Steps9: React.FC<ComponentProps> = (props) => {
    const [submitData, setSubmitData] = useState<Answer>(props.data);
    useEffect(() => {
        if (props.data) {
            setSubmitData(props.data);
        }
    }, [props.data]);

    const toogleAnswer = (key: string) => {
        let tempData = { ...submitData };
        if (tempData[key]) {
            tempData[key] = 0;
        } else {
            tempData[key] = 1;
        }
        setSubmitData(tempData);
    };

    const isSelected = (key: string) => {
        return parseInt(submitData[key]);
    };

    const handlePrev = () => {
        if (submitData.retireIncomeTypePension!= 1) {
            submitData.retireIncomePension = 0;
            submitData.retireIncomePensionAmountPercent = 0;
        }
        if (submitData.retireIncomeTypeSocial!= 1) {
            submitData.retireIncomeSocial = 0;
        }
        if (submitData.retireIncomeTypePartTime!= 1) {
            submitData.retireIncomePartTime = 0;
        }
        if (submitData.retireIncomeTypeRental!= 1) {
            submitData.retireIncomeRental = 0;
        }
        if (submitData.retireIncomeTypeOther!= 1) {
            submitData.retireIncomeOther = 0;
        }
        return props.handlePrev(submitData);
    };

    const handleNext = () => {
        if (submitData.retireIncomeTypePension!= 1) {
            submitData.retireIncomePension = 0;
            submitData.retireIncomePensionAmountPercent = 0;
        }
        if (submitData.retireIncomeTypeSocial!= 1) {
            submitData.retireIncomeSocial = 0;
        }
        if (submitData.retireIncomeTypePartTime!= 1) {
            submitData.retireIncomePartTime = 0;
        }
        if (submitData.retireIncomeTypeRental!= 1) {
            submitData.retireIncomeRental = 0;
        }
        if (submitData.retireIncomeTypeOther!= 1) {
            submitData.retireIncomeOther = 0;
        }
        return props.handleNext(submitData);
    };

    return (
        <div className="ml-[218px] w-[40%] min-w-[800px] bg-white">
            <div className="w-full h-[76px] bg-[#c1c3ce] flex justify-center items-center text-[#0A2C75] py-6 text-md md:text-lg lg:text-xl px-3 text-center"></div>
            <div className="w-full px-[60px] pb-12 mt-5">
                <Stepper step={6} />
                <div>
                    <div className="w-full text-xl font-semibold mb-5">
                        What types of income do you have? (Check all that apply)
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("retireIncomeTypePension")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("retireIncomeTypePension")}
                    >
                        Pension
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("retireIncomeTypeSocial")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("retireIncomeTypeSocial")}
                    >
                        <Tooltip title="Calculated based off DOB and salary">
                            Social Security
                        </Tooltip>
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("retireIncomeTypePartTime")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("retireIncomeTypePartTime")}
                    >
                        Part time
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("retireIncomeTypeRental")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("retireIncomeTypeRental")}
                    >
                        Rental Income
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("retireIncomeTypeOther")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("retireIncomeTypeOther")}
                    >
                        Other
                    </div>
                </div>
                <div className="w-full flex justify-between">
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#F2F3F8]"
                        onClick={() => {
                            handlePrev();
                        }}
                    >
                        <ArrowLeft className="mr-3" />
                        Back
                    </button>
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#0A2C75] text-white"
                        onClick={() => {
                            handleNext();
                        }}
                    >
                        Continue
                        <ArrowRight className="ml-3" />
                    </button>
                </div>
            </div>
        </div>
    );
};

export default Steps9;
