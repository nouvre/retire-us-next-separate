import React, { useEffect, useState } from "react";
import ArrowLeft from "@2fd/ant-design-icons/lib/ArrowLeft";
import ArrowRight from "@2fd/ant-design-icons/lib/ArrowRight";
import Information from "@2fd/ant-design-icons/lib/Information";
import Stepper from "./Stepper";
import { Slider, Tooltip } from "antd";
import { Answer } from "@/store/questions/types";

interface ComponentProps {
    data: Answer;
    handleNext: (e: Answer) => void;
    handlePrev: (e: Answer) => void;
}

const Steps18: React.FC<ComponentProps> = (props) => {
    const [submitData, setSubmitData] = useState<Answer>(props.data);
    const [afterTaxAmount, setAfterTaxAmount] = useState<number>(0);
    const [taxDeferredAmount, setTaxDeferredAmount] = useState<number>(0);
    const [taxFreeAmount, setTaxFreeAmount] = useState<number>(0);
    useEffect(() => {
        if (props.data) {
            setSubmitData(props.data);
            if (props.data.systematicSavingAfterTax) {
                setAfterTaxAmount(props.data.systematicSavingAfterTax);
            }
            if (props.data.systematicSavingTaxDeferred) {
                setTaxDeferredAmount(props.data.systematicSavingTaxDeferred);
            }
            if (props.data.systematicSavingTaxFree) {
                setTaxFreeAmount(props.data.systematicSavingTaxFree);
            }
        }
    }, [props.data]);

    const handleNext = () => {
        return props.handleNext({
            ...submitData,
            systematicSavingAfterTax: afterTaxAmount,
            systematicSavingTaxDeferred: taxDeferredAmount,
            systematicSavingTaxFree: taxFreeAmount,
        });
    };

    const handlePrev = () => {
        return props.handlePrev({
            ...submitData,
            systematicSavingAfterTax: afterTaxAmount,
            systematicSavingTaxDeferred: taxDeferredAmount,
            systematicSavingTaxFree: taxFreeAmount,
        });
    };

    return (
        <div className="ml-[218px] w-[40%] min-w-[800px] bg-white">
            <div className="w-full h-[76px] bg-[#c1c3ce] flex justify-center items-center text-[#0A2C75] py-6 text-md md:text-lg lg:text-xl px-3 text-center"></div>
            <div className="w-full px-[60px] pb-12 mt-5">
                <Stepper step={14} />
                <div className="my-5">
                    <div className="w-full text-xl font-semibold mb-5">
                            Do you save into other accounts outside of your employer?
                    </div>
                    <div className="w-full flex gap-1">
                        <div className="w-6/12"></div>
                        <div className="w-2/12 text-center">
                            <span>Totals</span>
                        </div>
                        <div className="w-2/12 text-center">
                            <span>Monthly</span>
                        </div>
                        <div className="w-2/12 text-center">
                            <span>Annual</span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-2/12 flex items-center">
                            <span>After Tax</span>
                            <Tooltip title="Savings, Checking, Brokerage">
                                <Information className="w-5 h-5 flex items-center justify-center" />
                            </Tooltip>
                        </div>
                        <div className="w-4/12 pr-4">
                            <Slider
                                defaultValue={30}
                                max={20000}
                                min={0}
                                value={afterTaxAmount}
                                className="w-full"
                                onChange={(e) => {
                                    setAfterTaxAmount(e);
                                }}
                            />
                        </div>
                        <div className="w-2/12"></div>
                        <div className="w-2/12 text-center">
                            <span>${afterTaxAmount.toLocaleString()}</span>
                        </div>
                        <div className="w-2/12 text-center">
                            <span>
                                ${(afterTaxAmount * 12).toLocaleString()}
                            </span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-2/12 flex items-center">
                            <span>Tax Deferred</span>
                            <Tooltip title="IRA, 401k, TSP, 403B, Annuities">
                                <Information className="w-5 h-5 flex items-center justify-center" />
                            </Tooltip>
                        </div>
                        <div className="w-4/12 pr-4">
                            <Slider
                                defaultValue={30}
                                max={20000}
                                min={0}
                                value={taxDeferredAmount}
                                className="w-full"
                                onChange={(e) => {
                                    setTaxDeferredAmount(e);
                                }}
                            />
                        </div>
                        <div className="w-2/12"></div>
                        <div className="w-2/12 text-center">
                            <span>${taxDeferredAmount.toLocaleString()}</span>
                        </div>
                        <div className="w-2/12 text-center">
                            <span>
                                ${(taxDeferredAmount * 12).toLocaleString()}
                            </span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-2/12 flex items-center">
                            <span>Tax Free</span>
                            <Tooltip title="Roth IRS, Roth 401k, Cash Value Life">
                                <Information className="w-5 h-5 flex items-center justify-center" />
                            </Tooltip>
                        </div>
                        <div className="w-4/12 pr-4">
                            <Slider
                                defaultValue={30}
                                max={20000}
                                min={0}
                                value={taxFreeAmount}
                                className="w-full"
                                onChange={(e) => {
                                    setTaxFreeAmount(e);
                                }}
                            />
                        </div>
                        <div className="w-2/12"></div>
                        <div className="w-2/12 text-center">
                            <span>${taxFreeAmount.toLocaleString()}</span>
                        </div>
                        <div className="w-2/12 text-center">
                            <span>
                                ${(taxFreeAmount * 12).toLocaleString()}
                            </span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-3">
                        <div className="w-8/12"></div>
                        <div className="w-4/12 h-[2px] bg-gray-400"></div>
                    </div>
                    <div className="w-full flex gap-1 mt-3">
                        <div className="w-8/12"></div>
                        <div className="w-2/12 text-center">
                            $
                            {(
                                afterTaxAmount +
                                taxDeferredAmount +
                                taxFreeAmount
                            ).toLocaleString()}
                        </div>
                        <div className="w-2/12 text-center">
                            $
                            {(
                                (afterTaxAmount +
                                    taxDeferredAmount +
                                    taxFreeAmount) *
                                12
                            ).toLocaleString()}
                        </div>
                    </div>
                </div>
                <div className="w-full flex justify-between">
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#F2F3F8]"
                        onClick={() => {
                            handlePrev();
                        }}
                    >
                        <ArrowLeft className="mr-3" />
                        Back
                    </button>
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#0A2C75] text-white"
                        onClick={() => {
                            handleNext();
                        }}
                    >
                        Continue
                        <ArrowRight className="ml-3" />
                    </button>
                </div>
            </div>
        </div>
    );
};

export default Steps18;
