import React, { useEffect, useState } from "react";
import ArrowRight from "@2fd/ant-design-icons/lib/ArrowRight";
import ArrowLeft from "@2fd/ant-design-icons/lib/ArrowLeft";
import Stepper from "./Stepper";
import Timer from "@/components/common/Timer";
import { Answer } from "@/store/questions/types";

interface ComponentProps {
    data: Answer;
    handleNext: (e: Answer) => void;
    handlePrev: (e: Answer) => void;
}

const Steps22: React.FC<ComponentProps> = (props) => {
    const [submitData, setSubmitData] = useState<Answer>(props.data);
    const buttonRef = React.useRef<HTMLButtonElement>(null);
    const answerKeys = [
        "decideSaveRetirementMathThing",
        "decideSaveRetirementFeelingThing",
    ];

    useEffect(() => {
        if (props.data) {
            setSubmitData(props.data);
        }
    }, [props.data]);

    const toogleAnswer = (key: string) => {
        let tempData = { ...submitData };
        for (let index = 0; index < answerKeys.length; index++) {
            if (key === answerKeys[index]) {
                tempData[answerKeys[index]] = 1;
            } else {
                tempData[answerKeys[index]] = 0;
            }
        }
        setSubmitData(tempData);
    };

    const isSelected = (key: string) => {
        return parseInt(submitData[key]);
    };

    const handleNext = () => {
        return props.handleNext(submitData);
    };
    
    const handlePrev = () => {
        return props.handlePrev(submitData);
    };

    return (
        <div className="ml-[218px] w-[40%] min-w-[800px] bg-white">
            <div className="w-full h-[76px] bg-[#c1c3ce] flex justify-center items-center text-[#0A2C75] py-6 text-md md:text-lg lg:text-xl px-3 text-center"></div>
            <div className="w-full px-[60px] pb-12 mt-5">
                <Stepper step={16} />
                <div className="my-5">
                    <Timer className="mb-5" onEnd={() => {
                            if(buttonRef.current) {
                                buttonRef.current.click();
                            }
                    }} />
                    <div className="w-full text-xl font-semibold mb-5">
                        How did you decide how much needs to be saved for retirement?
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("decideSaveRetirementMathThing")
                                ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                                : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("decideSaveRetirementMathThing")}
                    >
                        It's a math thing
                    </div>
                    <div
                        className={`w-full py-4 text-center text-lg font-bold mb-3 cursor-pointer ${
                            isSelected("decideSaveRetirementFeelingThing")
                            ? "bg-[#72C9EE] border-2 border-[#72C9EE] text-white"
                            : "bg-white text-gray-400 border-2 border-[#0A2C7535]"
                        }`}
                        onClick={() => toogleAnswer("decideSaveRetirementFeelingThing")}
                        >
                        It's more of a feeling thing
                    </div>
                </div>
                <div className="w-full flex justify-between">
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#F2F3F8]"
                        onClick={() => {
                            handlePrev();
                        }}
                    >
                        <ArrowLeft className="mr-3" />
                        Back
                    </button>
                    <div>
                        <button
                            className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#0A2C75] text-white"
                            ref={buttonRef}
                            onClick={() => {
                                handleNext();
                            }}
                            hidden={submitData.decideSaveRetirementFeelingThing != 1 && submitData.decideSaveRetirementMathThing != 1}
                        >
                            Continue
                            <ArrowRight className="ml-3" />
                        </button>
                        <button 
                            className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#0A2C75] text-white opacity-70" 
                            hidden={submitData.decideSaveRetirementFeelingThing == 1 || submitData.decideSaveRetirementMathThing == 1}
                        >
                            Continue
                            <ArrowRight className="ml-3" />
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Steps22;
