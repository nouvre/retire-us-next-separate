import React, { useEffect, useState } from "react";
import ArrowLeft from "@2fd/ant-design-icons/lib/ArrowLeft";
import ArrowRight from "@2fd/ant-design-icons/lib/ArrowRight";
import Stepper from "./Stepper";
import { Slider } from "antd";
import { Answer } from "@/store/questions/types";

interface ComponentProps {
    data: Answer;
    handleNext: (e: Answer) => void;
    handlePrev: (e: Answer) => void;
}

const Steps12: React.FC<ComponentProps> = (props) => {
    const [submitData, setSubmitData] = useState<Answer>(props.data);
    const [
        householdEmploymentIncomeAmount,
        setHouseholdEmploymentIncomeAmount,
    ] = useState<number>(0);
    const [savedPercentage, setSavedPercentage] = useState<number>(0);
    const [matchPercentage, setMatchPercentage] = useState<number>(0);
    useEffect(() => {
        if (props.data) {
            setSubmitData(props.data);
            if (props.data.quickExperciseHouseholdIncome) {
                setHouseholdEmploymentIncomeAmount(
                    props.data.quickExperciseHouseholdIncome
                );
            }
            if (props.data.quickExperciseSavedPercentage) {
                setSavedPercentage(props.data.quickExperciseSavedPercentage);
            }
            if (props.data.quickExperciseMatchPercentage) {
                setMatchPercentage(props.data.quickExperciseMatchPercentage);
            }
        }
    }, [props.data]);

    const handleNext = () => {
        return props.handleNext({
            ...submitData,
            quickExperciseHouseholdIncome: householdEmploymentIncomeAmount,
            quickExperciseSavedPercentage: savedPercentage,
            quickExperciseMatchPercentage: matchPercentage,
        });
    };

    const handlePrev = () => {
        return props.handlePrev({
            ...submitData,
            quickExperciseHouseholdIncome: householdEmploymentIncomeAmount,
            quickExperciseSavedPercentage: savedPercentage,
            quickExperciseMatchPercentage: matchPercentage,
        });
    };

    return (
        <div className="ml-[218px] w-[40%] min-w-[800px] bg-white">
            <div className="w-full h-[76px] bg-[#c1c3ce] flex justify-center items-center text-[#0A2C75] py-6 text-md md:text-lg lg:text-xl px-3 text-center"></div>
            <div className="w-full px-[60px] pb-12 mt-5">
                <Stepper step={12} />
                <div className="my-5">
                    <div className="w-full text-xl font-semibold mb-5">
                        Quick Exercise: How much do you estimate you save
                        through employer plans?
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-3/12 text-center">
                            Total household employment income
                        </div>
                        <div className="w-6/12 pr-4">
                            <Slider
                                defaultValue={30}
                                max={1000000}
                                min={0}
                                value={householdEmploymentIncomeAmount}
                                className="w-full"
                                onChange={(e) => {
                                    setHouseholdEmploymentIncomeAmount(e);
                                }}
                            />
                        </div>
                        <div className="w-3/12 text-center">
                            <span>
                                $
                                {householdEmploymentIncomeAmount.toLocaleString()}
                            </span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-3/12 text-center">
                            Percentage saved for retirement
                        </div>
                        <div className="w-6/12 pr-4">
                            <Slider
                                defaultValue={25}
                                max={100}
                                min={0}
                                value={savedPercentage}
                                className="w-full"
                                onChange={(e) => {
                                    setSavedPercentage(e);
                                }}
                            />
                        </div>
                        <div className="w-3/12 text-center">
                            <span>{savedPercentage}%</span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-4">
                        <div className="w-3/12 text-center px-2">
                            Employer Match Percentage
                        </div>
                        <div className="w-6/12 pr-4">
                            <Slider
                                defaultValue={25}
                                max={100}
                                min={0}
                                value={matchPercentage}
                                className="w-full"
                                onChange={(e) => {
                                    setMatchPercentage(e);
                                }}
                            />
                        </div>
                        <div className="w-3/12 text-center">
                            <span>{matchPercentage}%</span>
                        </div>
                    </div>
                    <div className="w-full flex gap-1 my-3">
                        <div className="w-9/12"></div>
                        <div className="w-3/12 h-[2px] bg-gray-400"></div>
                    </div>
                    <div className="w-full flex gap-1 mt-3">
                        <div className="w-9/12"></div>
                        <div className="w-3/12 text-center">
                            $
                            {(
                                householdEmploymentIncomeAmount * (savedPercentage / 100) +
                                householdEmploymentIncomeAmount *(savedPercentage / 100) * (matchPercentage / 100)
                            ).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}
                        </div>
                    </div>
                </div>
                <div className="w-full flex justify-between">
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#F2F3F8]"
                        onClick={() => {
                            handlePrev();
                        }}
                    >
                        <ArrowLeft className="mr-3" />
                        Back
                    </button>
                    <button
                        className="flex items-center justify-center px-12 h-[65px] text-xl font-bold bg-[#0A2C75] text-white"
                        onClick={() => {
                            handleNext();
                        }}
                    >
                        Continue
                        <ArrowRight className="ml-3" />
                    </button>
                </div>
            </div>
        </div>
    );
};

export default Steps12;
